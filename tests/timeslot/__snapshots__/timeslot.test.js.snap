// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Timeslot handles change correctly 1`] = `
ShallowWrapper {
  "length": 1,
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <Timeslot
    date={2018-03-02T22:00:00.000Z}
    end="12:00"
    start="10:00"
  />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "host",
    "props": Object {
      "children": Array [
        <link
          href="app/styles/timeslot_style.css"
          rel="stylesheet"
          type="text/css"
        />,
        <p
          className="date"
        >
          Sat, 3.3.18
        </p>,
        <TimeslotDrag
          available={
            Object {
              "end": 600,
              "start": 600,
            }
          }
          end={720}
          onChange={[Function]}
          start={600}
        />,
        <TimeslotInput
          available={
            Object {
              "end": 600,
              "start": 600,
            }
          }
          onChange={[Function]}
        />,
      ],
      "className": "timeslot-picker",
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "href": "app/styles/timeslot_style.css",
          "rel": "stylesheet",
          "type": "text/css",
        },
        "ref": null,
        "rendered": null,
        "type": "link",
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": "Sat, 3.3.18",
          "className": "date",
        },
        "ref": null,
        "rendered": "Sat, 3.3.18",
        "type": "p",
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {
          "available": Object {
            "end": 600,
            "start": 600,
          },
          "end": 720,
          "onChange": [Function],
          "start": 600,
        },
        "ref": null,
        "rendered": null,
        "type": [Function],
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {
          "available": Object {
            "end": 600,
            "start": 600,
          },
          "onChange": [Function],
        },
        "ref": null,
        "rendered": null,
        "type": [Function],
      },
    ],
    "type": "div",
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": Array [
          <link
            href="app/styles/timeslot_style.css"
            rel="stylesheet"
            type="text/css"
          />,
          <p
            className="date"
          >
            Sat, 3.3.18
          </p>,
          <TimeslotDrag
            available={
              Object {
                "end": 600,
                "start": 600,
              }
            }
            end={720}
            onChange={[Function]}
            start={600}
          />,
          <TimeslotInput
            available={
              Object {
                "end": 600,
                "start": 600,
              }
            }
            onChange={[Function]}
          />,
        ],
        "className": "timeslot-picker",
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "href": "app/styles/timeslot_style.css",
            "rel": "stylesheet",
            "type": "text/css",
          },
          "ref": null,
          "rendered": null,
          "type": "link",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": "Sat, 3.3.18",
            "className": "date",
          },
          "ref": null,
          "rendered": "Sat, 3.3.18",
          "type": "p",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "available": Object {
              "end": 600,
              "start": 600,
            },
            "end": 720,
            "onChange": [Function],
            "start": 600,
          },
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "available": Object {
              "end": 600,
              "start": 600,
            },
            "onChange": [Function],
          },
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
      ],
      "type": "div",
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
      },
    },
  },
}
`;

exports[`Timeslot handles change correctly 2`] = `
ShallowWrapper {
  "length": 1,
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <Timeslot
    date={2018-03-02T22:00:00.000Z}
    end="12:00"
    start="10:00"
  />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "host",
    "props": Object {
      "children": Array [
        <link
          href="app/styles/timeslot_style.css"
          rel="stylesheet"
          type="text/css"
        />,
        <p
          className="date"
        >
          Sat, 3.3.18
        </p>,
        <TimeslotDrag
          available={
            Object {
              "end": 600,
              "start": 600,
            }
          }
          end={720}
          onChange={[Function]}
          start={600}
        />,
        <TimeslotInput
          available={
            Object {
              "end": 600,
              "start": 600,
            }
          }
          onChange={[Function]}
        />,
      ],
      "className": "timeslot-picker",
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "href": "app/styles/timeslot_style.css",
          "rel": "stylesheet",
          "type": "text/css",
        },
        "ref": null,
        "rendered": null,
        "type": "link",
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": "Sat, 3.3.18",
          "className": "date",
        },
        "ref": null,
        "rendered": "Sat, 3.3.18",
        "type": "p",
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {
          "available": Object {
            "end": 600,
            "start": 600,
          },
          "end": 720,
          "onChange": [Function],
          "start": 600,
        },
        "ref": null,
        "rendered": null,
        "type": [Function],
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {
          "available": Object {
            "end": 600,
            "start": 600,
          },
          "onChange": [Function],
        },
        "ref": null,
        "rendered": null,
        "type": [Function],
      },
    ],
    "type": "div",
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": Array [
          <link
            href="app/styles/timeslot_style.css"
            rel="stylesheet"
            type="text/css"
          />,
          <p
            className="date"
          >
            Sat, 3.3.18
          </p>,
          <TimeslotDrag
            available={
              Object {
                "end": 600,
                "start": 600,
              }
            }
            end={720}
            onChange={[Function]}
            start={600}
          />,
          <TimeslotInput
            available={
              Object {
                "end": 600,
                "start": 600,
              }
            }
            onChange={[Function]}
          />,
        ],
        "className": "timeslot-picker",
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "href": "app/styles/timeslot_style.css",
            "rel": "stylesheet",
            "type": "text/css",
          },
          "ref": null,
          "rendered": null,
          "type": "link",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": "Sat, 3.3.18",
            "className": "date",
          },
          "ref": null,
          "rendered": "Sat, 3.3.18",
          "type": "p",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "available": Object {
              "end": 600,
              "start": 600,
            },
            "end": 720,
            "onChange": [Function],
            "start": 600,
          },
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "available": Object {
              "end": 600,
              "start": 600,
            },
            "onChange": [Function],
          },
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
      ],
      "type": "div",
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
      },
    },
  },
}
`;

exports[`Timeslot initializes correctly 1`] = `
<div
  className="timeslot-picker"
>
  <link
    href="app/styles/timeslot_style.css"
    rel="stylesheet"
    type="text/css"
  />
  <p
    className="date"
  >
    Mon, 5.28.18
  </p>
  <div
    className="dragContainer"
    style={
      Object {
        "height": 400,
        "overflow": "hidden",
        "position": "relative",
      }
    }
  >
    <div
      className="dragableContainer unavailable"
      style={
        Object {
          "height": 400,
          "top": 0,
        }
      }
    >
      <p
        style={
          Object {
            "top": "5px",
          }
        }
      >
        8:00
      </p>
      <p
        style={
          Object {
            "bottom": "5px",
          }
        }
      >
        12:00
      </p>
    </div>
    <div
      className="dragableContainer"
      style={
        Object {
          "height": 0,
          "top": 0,
        }
      }
    >
      <p
        style={
          Object {
            "top": "5px",
          }
        }
      >
        8:00
      </p>
      <p
        style={
          Object {
            "bottom": "5px",
          }
        }
      >
        8:00
      </p>
      <div
        className="timeslot-dragball"
        draggable="true"
        onDrag={[Function]}
        onTouchMove={[Function]}
        style={
          Object {
            "height": 12,
            "top": -6,
            "width": 12,
          }
        }
      />
      <div
        className="timeslot-dragball"
        draggable="true"
        onDrag={[Function]}
        onTouchMove={[Function]}
        style={
          Object {
            "bottom": -6,
            "height": 12,
            "width": 12,
          }
        }
      />
    </div>
  </div>
  <div>
    <div
      className="timeslot-input"
    >
      <input
        onBlur={[Function]}
        onChange={[Function]}
        onKeyPress={[Function]}
        type="text"
        value="8:00"
      />
      <p>
        -
      </p>
      <input
        onBlur={[Function]}
        onChange={[Function]}
        onKeyPress={[Function]}
        type="text"
        value="8:00"
      />
    </div>
  </div>
</div>
`;

exports[`Timeslot initializes correctly 2`] = `
<div
  className="timeslot-picker"
>
  <link
    href="app/styles/timeslot_style.css"
    rel="stylesheet"
    type="text/css"
  />
  <p
    className="date"
  >
    Wed, 2.1.17
  </p>
  <div
    className="dragContainer"
    style={
      Object {
        "height": 400,
        "overflow": "hidden",
        "position": "relative",
      }
    }
  >
    <div
      className="dragableContainer unavailable"
      style={
        Object {
          "height": 400,
          "top": 0,
        }
      }
    >
      <p
        style={
          Object {
            "top": "5px",
          }
        }
      >
        12:20
      </p>
      <p
        style={
          Object {
            "bottom": "5px",
          }
        }
      >
        20:40
      </p>
    </div>
    <div
      className="dragableContainer"
      style={
        Object {
          "height": 0,
          "top": 0,
        }
      }
    >
      <p
        style={
          Object {
            "top": "5px",
          }
        }
      >
        12:20
      </p>
      <p
        style={
          Object {
            "bottom": "5px",
          }
        }
      >
        12:20
      </p>
      <div
        className="timeslot-dragball"
        draggable="true"
        onDrag={[Function]}
        onTouchMove={[Function]}
        style={
          Object {
            "height": 12,
            "top": -6,
            "width": 12,
          }
        }
      />
      <div
        className="timeslot-dragball"
        draggable="true"
        onDrag={[Function]}
        onTouchMove={[Function]}
        style={
          Object {
            "bottom": -6,
            "height": 12,
            "width": 12,
          }
        }
      />
    </div>
  </div>
  <div>
    <div
      className="timeslot-input"
    >
      <input
        onBlur={[Function]}
        onChange={[Function]}
        onKeyPress={[Function]}
        type="text"
        value="12:20"
      />
      <p>
        -
      </p>
      <input
        onBlur={[Function]}
        onChange={[Function]}
        onKeyPress={[Function]}
        type="text"
        value="12:20"
      />
    </div>
  </div>
</div>
`;
